<Window x:Class="RegexSolver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RegexSolver"
        mc:Ignorable="d"
        Title="RegexSolver" Height="800" Width="1024" MinHeight="400" MinWidth="600">
    <Window.Resources>
        <ColorAnimation x:Key="BlinkBrush" From="OrangeRed" To="Orange" 
                        RepeatBehavior="Forever"
                        FillBehavior="Stop" 
                        AutoReverse="True"
                        Duration="0:0:1"/>
        
        <Style x:Key="PatternTextBoxBaseStyle" TargetType="TextBoxBase">
            <Style.Resources>
                <Style x:Key="PatternTooltipStyle" TargetType="ToolTip">
                    <Setter Property="Background" Value="LightYellow"></Setter>
                    <Setter Property="Foreground" Value="DarkBlue"></Setter>
                    <Setter Property="FontFamily" Value="Lucida Console"/>
                    <Setter Property="FontSize" Value="13"/>
                </Style>
            </Style.Resources>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Lucida Console"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="DarkBlue"/>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip Style="{StaticResource PatternTooltipStyle}" Content="{Binding Text}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTipService.ShowDuration" Value="120000"/>
        </Style>
        <Style x:Key="PatternTextBoxHorizontalStyle" TargetType="TextBox" BasedOn="{StaticResource PatternTextBoxBaseStyle}">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="5,13"/>
        </Style>
        <Style x:Key="PatternTextBoxLeftStyle" TargetType="TextBox" BasedOn="{StaticResource PatternTextBoxHorizontalStyle}">
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="PatternTextBoxRightStyle" TargetType="TextBox" BasedOn="{StaticResource PatternTextBoxHorizontalStyle}">
            <Setter Property="TextAlignment" Value="Left"/>
        </Style>
        <Style x:Key="PatternTextBoxVerticalStyle" TargetType="TextBox" BasedOn="{StaticResource PatternTextBoxBaseStyle}">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="5,13"/>
            <!--<Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>-->
        </Style>
        <Style x:Key="PatternTextBoxTopStyle" TargetType="TextBox" BasedOn="{StaticResource PatternTextBoxVerticalStyle}">
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="PatternTextBoxBottomStyle" TargetType="TextBox" BasedOn="{StaticResource PatternTextBoxVerticalStyle}">
            <Setter Property="TextAlignment" Value="Left"/>
        </Style>

        <Style x:Key="CellStyle" TargetType="TextBox">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalContentAlignment="Center" Margin="0,-3,0,0" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type local:RegexPuzzleRectPatternVM}">
            <DataTemplate.Resources>
               <RotateTransform x:Key="Vertical" Angle="90"/>
               <BooleanToVisibilityConverter x:Key="BoolToVis"/>
            </DataTemplate.Resources>
            <Border BorderThickness="1" BorderBrush="Transparent">
                <Grid Margin="5,0" Background="{Binding Background}">
                    <ProgressBar x:Name="progress" Background="Transparent" Foreground="#44FFFFFF" Minimum="0" Maximum="1"
                                 Value="{Binding Progress, Mode=OneWay}" Visibility="{Binding InProcessing, Converter={StaticResource BoolToVis}}"/>
                    <TextBox x:Name="tb" Text="{Binding Text}" Background="Transparent" Foreground="{Binding Foreground}" BorderThickness="0"
                         MouseDoubleClick="Pattern_MouseDoubleClick"/>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Side}" Value="Left">
                    <Setter TargetName="tb" Property="Style" Value="{StaticResource PatternTextBoxLeftStyle}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Side}" Value="Right">
                    <Setter TargetName="tb" Property="Style" Value="{StaticResource PatternTextBoxRightStyle}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Side}" Value="Top">
                    <Setter TargetName="tb" Property="Style" Value="{StaticResource PatternTextBoxTopStyle}"/>
                    <Setter Property="LayoutTransform" Value="{StaticResource Vertical}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Side}" Value="Bottom">
                    <Setter TargetName="tb" Property="Style" Value="{StaticResource PatternTextBoxBottomStyle}"/>
                    <Setter Property="LayoutTransform" Value="{StaticResource Vertical}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:RegexPuzzleRectCellVM}">
            <TextBox Style="{StaticResource CellStyle}" Text="{Binding VisibleText, UpdateSourceTrigger=PropertyChanged}" FontSize="{Binding FontSize}"
                     Background="{Binding Background}" BorderBrush="{Binding BorderBrush}" ToolTip="{Binding WrongChars}"
                     MouseDoubleClick="Cell_MouseDoubleClick" LostKeyboardFocus="Cell_LostKeyboardFocus">
                <TextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="ApplicationCommands.Cut" />
                        <MenuItem Command="ApplicationCommands.Copy" />
                        <MenuItem Command="ApplicationCommands.Paste" />
                        <MenuItem Command="ApplicationCommands.SelectAll" />
                        <Separator/>
                        <MenuItem Header="Paste unwrapped" MenuItem.Click="Cell_PasteUnwrapped"/>
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <ToggleButton x:Name="btnNew" Content="New" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90"/>
            <Popup x:Name="PopupNew"
                    PlacementTarget="{Binding ElementName=btnNew}"
                    IsOpen="{Binding IsChecked, ElementName=btnNew, Mode=TwoWay}"
                    StaysOpen="False"
                    AllowsTransparency="True"
                    Focusable="False"
                    PopupAnimation="Fade">
                <Border BorderThickness="1" BorderBrush="Black" Background="White" Padding="20,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10">
                            <Button Content="Create empty" HorizontalAlignment="Left" Height="22" VerticalAlignment="Center" Width="190" Click="OnNew_Click" Background="#FFADE063"/>
                            <Label VerticalAlignment="Center" Margin="10,0,5,0">Rows:</Label>
                            <TextBox Width="30" VerticalAlignment="Center" Text="{Binding NewRows}"/>
                            <Label VerticalAlignment="Center" Margin="10,0,5,0">Columns:</Label>
                            <TextBox Width="30" VerticalAlignment="Center" Text="{Binding NewColumns}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10">
                            <Button Content="Import from regexcrossword.com" HorizontalAlignment="Left" Height="22" VerticalAlignment="Center" Width="190" Click="OnImport_Click" Background="#FFF5B74A"/>
                            <Label VerticalAlignment="Center" Margin="10,0,5,0">Id:</Label>
                            <TextBox Width="250" VerticalAlignment="Center" Text="{Binding RCWID}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>
            <Button Content="ClearAll" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Background="Pink" Click="OnClearAll_Click"/>
            <Button Content="ClearTemp" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Background="HotPink" Click="OnClearTemp_Click"/>
            <Button Content="CleanWrong" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Background="Aquamarine" Click="OnCleanWrong_Click"/>
            <ToggleButton x:Name="btnFillAll" Content="FillAll" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Background="RoyalBlue"/>
            <Popup x:Name="PopupFillAll"
                    PlacementTarget="{Binding ElementName=btnFillAll}"
                    IsOpen="{Binding IsChecked, ElementName=btnFillAll, Mode=TwoWay}"
                    StaysOpen="False"
                    AllowsTransparency="True"
                    Focusable="False"
                    PopupAnimation="Fade">
                <Border BorderThickness="1" BorderBrush="Black" Background="White" Padding="20,10">
                    <TextBox Width="150" VerticalAlignment="Center" PreviewKeyDown="OnFillAll_PreviewKeyDown"/>
                </Border>
            </Popup>
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Open" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Click="OnOpen_Click"/>
            <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Click="OnSave_Click"/>
            <Button x:Name="btnSaveAs" Content="SaveAs" HorizontalAlignment="Left" Height="30" Margin="5,0" VerticalAlignment="Center" Width="90" Click="OnSave_Click"/>
        </StackPanel>
        <Label Grid.Row="1" Grid.Column="0" Content="{Binding PuzzleName, FallbackValue='No name'}" FontSize="14" FontWeight="Bold"/>
        <Grid x:Name="Crossword" Grid.Row="1" TextBoxBase.TextChanged="Crossword_TextChanged">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Row="1" Grid.Column="0" BorderThickness="1" BorderBrush="Transparent" Margin="5,0">
                <Grid Background="LightGreen">
                    <ProgressBar Background="Transparent" Foreground="#44FFFFFF" Minimum="0" Maximum="1" Value="0.75" />
                    <TextBox Style="{StaticResource PatternTextBoxLeftStyle}" Text="[P-{][^\x5a-\x7e][%-_]" Background="Transparent" BorderThickness="0"/>
                </Grid>
            </Border>
            <TextBox Grid.Row="1" Grid.Column="3" Style="{StaticResource PatternTextBoxRightStyle}" Text="[ -`][X-\\][^\44-\127]" Background="Pink" Margin="5,0"/>
            <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource PatternTextBoxTopStyle}" Text="[^\x5b-\x61]" Background="LightGray" Margin="0,5">
                <TextBox.LayoutTransform>
                    <RotateTransform Angle="90"/>
                </TextBox.LayoutTransform>
            </TextBox>
            <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource PatternTextBoxBottomStyle}" Text="[^\40-\131]" Margin="0,5">
                <TextBox.LayoutTransform>
                    <RotateTransform Angle="90"/>
                </TextBox.LayoutTransform>
            </TextBox>
            <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource CellStyle}" Text="MWA\s" FontSize="12" Background="LightPink"/>
        </Grid>
        <Rectangle x:Name="Blink" Fill="#FFFFFFFF" Width="10" Height="10" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10"/>
    </Grid>
</Window>
